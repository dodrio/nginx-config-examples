# Simplest reverse proxy:
server {
       listen 80;
       server_name example.com;

       location / {
                proxy_pass http://127.0.0.1:5000;
       }
}

# Now the proxy is working. But for the reason of back-end friendly, you should add more configuration,
# Just like:

server {
        listen 80;
        server_name example.com;

        location / {
                proxy_set_header        Host              $host;
                proxy_set_header        X-Forwarded-Proto $scheme;
                proxy_set_header        X-Real-IP         $remote_addr;
                proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;

                proxy_pass              http://127.0.0.1:5000;
        }
}

# Host
#   Nginx 代理后的请求， 到达后端时，其 Host 头成了 Nginx 访问后端时的 Host —— 127.0.0.1，
#   修改这个头可以让后端服务取得用户真实访问的 Host。
# 由于 HTTP 协议标准中未包含客户端 IP 等信息，所以为了让后端能得到这些信息，业界普遍采用了几个非标
# 准头 X-Forworded 头来解决。

# 另外，你还应该参考 http://nginx.org/en/docs/http/ngx_http_proxy_module.html，配置 Proxy 缓存。

# Reverse proxy with rewriting URL
server {
        listen 80;
        server_name example.com;
        location /prefix/.* {
                 rewrite ^/prefix/(.*) /$1 break;

                 proxy_set_header       X-Forwarded-Proto $scheme;
                 proxy_set_header       Host              $host;
                 proxy_set_header       X-Real-IP         $remote_addr;
                 proxy_set_header       X-Forwarded-For   $proxy_add_x_forwarded_for;

                 proxy_pass             http://127.0.0.1:5000;
        }
}
