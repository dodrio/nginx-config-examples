# Enable gzip compressed.
gzip on;

# Compression level (1-9).
# 5 is a perfect compromise between size and cpu usage, offering about
# 75% reduction for most ascii files (almost identical to level 9).
gzip_comp_level 5;

# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
gzip_min_length 256;

# gzip buffer
gzip_buffers 16 8k;

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
gzip_proxied any;

# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
gzip_vary on;

# By default, Nginx supports gzip for HTTP/1.1 connections only, because some
# old HTTP/1.0 clients have bugs when using gzip.
# Now, this problem is not a big deal, so enable gzip for HTTP/1.0 and higher version.
gzip_http_version 1.0;

# Compress all output labeled with one of the following MIME-types.
# Node: If you don't specify this. Nginx will only compress text/html.
gzip_types
	text/plain
	text/css
	text/js
	text/javascript
	text/xml
	application/javascript
	application/x-javascript
	application/json
	application/xml
	application/xml+rss;
	# text/html is always compressed by HttpGzipModule
